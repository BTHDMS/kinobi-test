/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  fixEncoderSize,
  getAddressEncoder,
  getBytesEncoder,
  getProgramDerivedAddress,
  type Address,
  type ProgramDerivedAddress,
} from '@solana/web3.js';

export type PdaSeeds = {
  authority: Address;
};

export async function findPdaPda(
  seeds: PdaSeeds,
  config: { programAddress?: Address | undefined } = {}
): Promise<ProgramDerivedAddress> {
  const {
    programAddress = '3eSEGBd6d6C6imYBaeu9vDJqf4cCjxPE1JkX5TaagJCD' as Address<'3eSEGBd6d6C6imYBaeu9vDJqf4cCjxPE1JkX5TaagJCD'>,
  } = config;
  return await getProgramDerivedAddress({
    programAddress,
    seeds: [
      fixEncoderSize(getBytesEncoder(), 7).encode(
        new Uint8Array([101, 120, 97, 109, 112, 108, 101])
      ),
      getAddressEncoder().encode(seeds.authority),
    ],
  });
}
